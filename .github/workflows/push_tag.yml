---
name: On Push Tags 

on:
  push:
    tags:
      - v*

jobs:
#  test:
#    environment: dev
#    runs-on: windows-latest      
#       
#    steps:      
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup .NET ${{ matrix.dotnet-version }}
#        uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: ${{ matrix.dotnet-version }}
#
#      - name: Restore dependencies
#        run: dotnet restore Bg3LocaHelper.sln
#
#      - name: Build
#        run: dotnet build Bg3LocaHelper.sln --configuration Release --no-restore --verbosity minimal
#
#      - name: Test
#        run: dotnet test Bg3LocaHelper.sln --no-restore --verbosity normal
  
  build:
#    needs: test 
    permissions: write-all
    name: print-token
    environment: dev
    
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
        framework: [ 'net6.0-windows', 'net7.0-windows', 'net472', 'net481' ]

    env: 
      target_file: ${{ github.ref == 'refs/heads/main' && 'release' || 'nightly' }}-${{ matrix.framework }}-${{ github.ref_name }}.zip
      publish-dir: ./.publish/${{ matrix.framework }}
      project-file: ./LSLocalizeHelper/LSLocalizeHelper.csproj
      

    steps:
    - name: GitHub Tag Name example
      run: |
        echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
        echo "Tag name from github.ref_name: ${{ github.ref_name }}"
        echo "Tag name from GITHUB_REF##*/ :${GITHUB_REF##*/}"
        
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore dependencies
      run: dotnet restore Bg3LocaHelper.sln

    - name: Build
      run: dotnet build Bg3LocaHelper.sln --configuration Release --no-restore --verbosity minimal

    - name: Publish 
      run: dotnet publish ${{ env.project-file }} --configuration Release --no-build --output ${{ env.publish-dir }} --framework ${{ matrix.framework }}

    - name: Zip the publish directory
      run:  zip -r ./${{ env.target_file }} ${{ env.publish-dir }}/* 

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: ${{ github.ref == 'refs/heads/main' && true || false }}
        prerelease: ${{ github.ref == 'refs/heads/main' && false || true }}
        
    - name: Upload Release Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: |
        gh release upload "$tag" \
        --repo="$GITHUB_REPOSITORY" \
        --generate-notes \
        ${{ env.target_file }}
        
